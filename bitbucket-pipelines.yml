#  Template Java Gradle build

#  This template allows you to test and build your Java project with Gradle.
#  The workflow allows running tests, code checkstyle and security scans on the default branch.

# Prerequisites: appropriate project structure should exist in the repository.

image: node:20.11.1

pipelines:
  default:
    - step:
        name: Build and Test
        runs-on:
          - self.hosted
          - linux
        script:
          - echo "Hello Build and Test"
          - npm install -g prettier tslint
          - npm install
          - npm run build
          - tslint --project tsconfig.json -t checkstyle
        after-script:
          - pipe: atlassian/checkstyle-report:0.3.0
    - step:
        name: Security Scan
        runs-on:
          - self.hosted
          - linux
        script:
          - echo "Hello Security Scan"
          # Run a security scan for sensitive data.
          # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
          - pipe: atlassian/git-secrets-scan:0.5.1
    - step:
        name: Build Image
        runs-on:
          - self.hosted
          - linux
        script:
          - echo "Hello Build Image"
          - IMAGE_NAME=$BITBUCKET_REPO_SLUG
          - docker build . --file Dockerfile --tag ${IMAGE_NAME}:latest
        services:
          - docker
        caches:
          - docker
        artifacts:
          - "*.tar"
    - step:
        name: Jira Transition
        services:
          - docker
        runs-on:
          - self.hosted
          - linux
        script:
          - pipe: atlassian/jira-transition:0.5.0
            variables:
              JIRA_BASE_URL: ${JIRA_BASE_URL}
              JIRA_USER_EMAIL: ${JIRA_USER_EMAIL}
              JIRA_API_TOKEN: ${JIRA_API_TOKEN}
              ISSUE: $BITBUCKET_BRANCH
              TRANSITION: 'Ready To Test'
  branches:
    main:
    - step:
        name: Build staging
        deployment: Staging
        runs-on:
          - self.hosted
          - linux
        script:
          - echo "Hello Build and Test"
          - npm install -g prettier tslint
          - npm install
          - npm run build
          - tslint --project tsconfig.json -t checkstyle
        after-script:
          - pipe: atlassian/checkstyle-report:0.3.0
    - step:
        name: Build production
        deployment: Production
        trigger: manual
        runs-on:
          - self.hosted
          - linux
        script:
          - echo "Hello Build and Test"
          - npm install -g prettier tslint
          - npm install
          - npm run build
          - tslint --project tsconfig.json -t checkstyle
        after-script:
          - pipe: atlassian/checkstyle-report:0.3.0